const METADATA={id:"buyChunks",version:"1.0.0",minimumGameVersion:">=1.5.0",name:"Buy Chunks",description:"Need to buy chunks before to build on them.",website:"https://github.com/NatNgs/shapez-mods",author:"NatNgs",settings:{},doesNotAffectSavegame:!1};class BuyChunksHUD extends shapez.BaseHUDPart{initialize(){this.root.camera.downPreHandler.add(this.onMouseDown,this)}createElements(){}drawOverlays(e){if(!this.root.camera.getIsMapOverlayActive())return;if(!this.root.app.mousePosition)return;const{x:t,y:a}=this.getChunkOnMouse(),s=this.root.buyChunksData;if(!s.isChunkAvailableToPurchase(t,a))return;const{shape:o,cost:n}=s.getPriceOfChunk(t,a),i=s.canAffordChunk(t,a),h=this.root.camera.worldToScreen(new shapez.Vector(t*shapez.globalConfig.mapChunkSize*shapez.globalConfig.tileSize,a*shapez.globalConfig.mapChunkSize*shapez.globalConfig.tileSize)),r=new shapez.Vector(shapez.globalConfig.mapChunkSize*shapez.globalConfig.tileSize,shapez.globalConfig.mapChunkSize*shapez.globalConfig.tileSize).multiplyScalar(this.root.camera.zoomLevel),u=h.add(r.divideScalar(2));e.context.save(),e.context.fillStyle=i?"#22DD22":"#DD2222",e.context.fillRect(h.x,h.y,r.x,r.y),new shapez.ShapeItem(this.root.shapeDefinitionMgr.getShapeFromShortKey(o)).drawItemCenteredClipped(u.x,u.y-r.y/4,e,.4*r.y);const l=this.root.hubGoals.getShapesStoredByKey(o);e.context.fillStyle="white",e.context.textAlign="center",e.context.textBaseline="top",i&&l>0?(e.context.font="bold "+Math.floor(r.x/4)+"px GameFont",e.context.fillText(shapez.formatBigNumber(n),u.x,u.y+r.y/6)):(e.context.font="bold "+Math.floor(r.x/5)+"px GameFont",e.context.fillText(shapez.formatBigNumber(n),u.x,u.y),e.context.font=Math.floor(r.x/7)+"px GameFont",e.context.fillText("("+shapez.formatBigNumber(n-l)+")",u.x,u.y+r.y/4)),e.context.restore()}getChunkOnMouse(){const e=this.root.camera.screenToWorld(this.root.app.mousePosition);return{x:Math.floor(e.x/shapez.globalConfig.tileSize/shapez.globalConfig.mapChunkSize),y:Math.floor(e.y/shapez.globalConfig.tileSize/shapez.globalConfig.mapChunkSize)}}onMouseDown(){if(!this.root.camera.getIsMapOverlayActive())return;const e=this.getChunkOnMouse(),t=this.root.buyChunksData;t.isChunkAvailableToPurchase(e.x,e.y)&&(t.canAffordChunk(e.x,e.y)?(t.doBuyChunk(e.x,e.y),this.root.app.sound.playUiSound(shapez.SOUNDS.uiClick)):this.root.app.sound.playUiSound(shapez.SOUNDS.uiError))}update(){}}function toChunkKey(e,t){return e+" "+t}function fromChunkKey(e){return e.split(" ").map(parseInt)}function get4CornersComplexity(e,t,a,s){return e===s?e===t&&e===a?t?1:0:t===a?(e?1:0)+(t?1:0):(e?1:0)+(a?1:0)+(t?1:0):e===t?s===a?(t?1:0)+(a?1:0):(a?1:0)+(s?1:0)+(t?1:0):s===a?(t?1:0)+(e?1:0)+(a?1:0):t===a?(e?1:0)+(s?1:0)+(t?1:0):(e?1:0)+(s?1:0)+(t?1:0)+(a?1:0)}const cachedShapesComplexity={};function getShapeComplexity(e){if(e in cachedShapesComplexity)return cachedShapesComplexity[e];const t=e.split(":");let a=0;for(const e of t){const t=e.split("");let s=0,o=0;for(let e=0;e<t.length;e++)"-"!==t[e]&&"u"!==t[e]||(t[e]=""),e%2==0&&t[e]?s+=1:e%2==1&&t[e]&&(o+=1);const[n,i,h,r,u,l,c,p]=t;a+=get4CornersComplexity(n,h,u,c)*s+get4CornersComplexity(i,r,l,p)*o}return cachedShapesComplexity[e]=a,console.debug("shapesComplexity",cachedShapesComplexity),a}class BuyChunksData extends shapez.BasicSerializableObject{static getId(){return"buyChunksData"}static getSchema(){return{ownedChunks:shapez.types.array(shapez.types.string)}}constructor(){super(),this.ownedChunksMap={},this.doBuyChunk(-1,-1,!0),this.doBuyChunk(-1,0,!0),this.doBuyChunk(0,-1,!0),this.doBuyChunk(0,0,!0)}serialize(){this.ownedChunks=[];for(const e in this.ownedChunksMap)this.ownedChunks.push(e);return console.log("buyChunks:serialize",this),super.serialize()}deserialize(e,t=null){super.deserialize(e,t),this.ownedChunks?this.ownedChunks.forEach(e=>this.ownedChunksMap[e]=!0):console.warn(e,t)}isChunkOwned(e,t){return this.ownedChunksMap[toChunkKey(e,t)]}isTileOwned(e,t){return this.isChunkOwned(Math.floor(e/shapez.globalConfig.mapChunkSize),Math.floor(t/shapez.globalConfig.mapChunkSize))}isChunkAvailableToPurchase(e,t){return!this.isChunkOwned(e,t)&&(this.isChunkOwned(e+1,t)||this.isChunkOwned(e-1,t)||this.isChunkOwned(e,t+1)||this.isChunkOwned(e,t-1))}getPriceOfChunk(e,t){e=Math.floor(Math.abs(e>=0?e+1:e)),t=Math.floor(Math.abs(t>=0?t+1:t));const a=Math.min(e,t)-1,s=Math.max(e,t)-a,o=this.root.gameMode.getLevelDefinitions(),n=Object.entries(this.ownedChunksMap).length,i=a<o.length?o[a].shape:this.root.hubGoals.computeFreeplayShape((a-o.length)%o.length).cachedHash,h=getShapeComplexity(i);return{shape:i,cost:Math.round((100+n)*s/h)}}canAffordChunk(e,t){const a=this.getPriceOfChunk(e,t);return this.root.hubGoals.getShapesStoredByKey(a.shape)>=a.cost}doBuyChunk(e,t,a=!1){if(!a){if(!this.canAffordChunk(e,t))return!1;const{shape:a,cost:s}=this.getPriceOfChunk(e,t);this.root.hubGoals.takeShapeByKey(a,s),this.root.map.getChunk(e,t,!0).markDirty(),this.isChunkOwned(e-1,t)||this.root.map.getChunk(e-1,t,!0).markDirty(),this.isChunkOwned(e+1,t)||this.root.map.getChunk(e+1,t,!0).markDirty(),this.isChunkOwned(e,t-1)||this.root.map.getChunk(e,t-1,!0).markDirty(),this.isChunkOwned(e,t+1)||this.root.map.getChunk(e,t+1,!0).markDirty()}return this.ownedChunksMap[toChunkKey(e,t)]=!0,!0}}class Mod extends shapez.Mod{init(){this.signals.gameInitialized.add(e=>{e.buyChunksData=new BuyChunksData,e.buyChunksData.root=e}),this.signals.gameSerialized.add((e,t)=>{t.modExtraData.buyChunksData=e.buyChunksData.serialize()}),this.signals.gameDeserialized.add((e,t)=>{e.buyChunksData.deserialize(t.modExtraData.buyChunksData),e.buyChunksData.root=e}),this.modInterface.replaceMethod(shapez.GameLogic,"checkCanPlaceEntity",function(e,[t,a]){const s=t.components.StaticMapEntity.getTileSpaceBounds();return a.offset&&(s.x+=a.offset.x,s.y+=a.offset.y),!(!this.root.buyChunksData.isTileOwned(s.x,s.y)||!this.root.buyChunksData.isTileOwned(s.x+s.w-1,s.y+s.h-1))&&e(t,a)}),this.modInterface.extendClass(shapez.MapChunkView,({$super:e,$old:t})=>({drawBackgroundLayer(e){if(!this.root.buyChunksData.isChunkOwned(this.x,this.y))return e.context.save(),e.context.fillStyle="#3b3b3b",e.context.fillRect(this.worldSpaceRectangle.x,this.worldSpaceRectangle.y,this.worldSpaceRectangle.w,this.worldSpaceRectangle.h),void e.context.restore();t.drawBackgroundLayer.call(this,e)},drawOverlayPatches(e,a,s,o){this.root.buyChunksData.isChunkOwned(this.x,this.y)&&t.drawOverlayPatches.call(this,e,a,s,o)},generateOverlayBuffer(e,a,s,o,n){if(this.root.buyChunksData.isChunkOwned(this.x,this.y))return t.generateOverlayBuffer.call(this,e,a,s,o,n);e.save(),this.root.buyChunksData.isChunkAvailableToPurchase(this.x,this.y)?(t.generateOverlayBuffer.call(this,e,a,s,o,n),e.fillStyle="#444444AA"):e.fillStyle="#333333",e.fillRect(o,n,a,s),e.restore()}})),this.modInterface.registerHudElement("buyChunks",BuyChunksHUD),this.modInterface.replaceMethod(shapez.GameHUD,"drawOverlays",function(e,[t]){this.parts.buyChunks.drawOverlays(t),e(t)})}}